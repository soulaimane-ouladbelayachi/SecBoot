ARM GAS  /tmp/cc8hhZL9.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"system_stm32l5xx_ns.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "../../NonSecure/Core/Src/system_stm32l5xx_ns.c"
  21              		.section	.text.SystemInit,"ax",%progbits
  22              		.align	1
  23              		.global	SystemInit
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	SystemInit:
  29              	.LFB152:
   1:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
   2:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   ******************************************************************************
   3:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @file    system_stm32l5xx_ns.c
   4:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @author  MCD Application Team
   5:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @brief   CMSIS Cortex-M33 Device Peripheral Access Layer System Source File
   6:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *          to be used in non-secure application when the system implements
   7:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *          the TrustZone-M security.
   8:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
   9:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   This file provides two functions and one global variable to be called from
  10:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   user application:
  11:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *      - SystemInit(): This function is called at non-secure startup before
  12:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *                      branch to non-secure main program.
  13:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *                      This call is made inside the "startup_stm32l5xx.s" file.
  14:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
  15:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *                                  by the user application to setup the SysTick
  17:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *                                  timer or configure other parameters.
  18:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
  19:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *                                 be called whenever the core clock is changed
  21:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *                                 during program execution.
  22:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
  23:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  24:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   Then SystemInit() function is called, in "startup_stm32l5xx.s" file, to
  25:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   configure the system clock before to branch to main secure program.
  26:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   Later, when non-secure SystemInit() function is called, in "startup_stm32l5xx.s"
  27:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   file, the system clock may have been updated from reset value by the main
  28:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *   secure program.
  29:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
ARM GAS  /tmp/cc8hhZL9.s 			page 2


  30:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   ******************************************************************************
  31:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @attention
  32:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
  33:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * Copyright (c) 2019 STMicroelectronics.
  34:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * All rights reserved.
  35:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
  36:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * This software is licensed under terms that can be found in the LICENSE file
  37:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * in the root directory of this software component.
  38:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  39:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
  40:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   ******************************************************************************
  41:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  42:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  43:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup CMSIS
  44:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
  45:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  46:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  47:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System
  48:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
  49:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  50:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  51:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System_Private_Includes
  52:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
  53:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  54:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  55:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #include "stm32l5xx.h"
  56:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  57:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
  58:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @}
  59:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  60:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  61:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System_Private_TypesDefinitions
  62:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
  63:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  64:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  65:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
  66:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @}
  67:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  68:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  69:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System_Private_Defines
  70:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
  71:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
  72:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  73:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #if !defined  (HSE_VALUE)
  74:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   #define HSE_VALUE    16000000U /*!< Value of the External oscillator in Hz */
  75:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #endif /* HSE_VALUE */
  76:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  77:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #if !defined  (MSI_VALUE)
  78:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
  79:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #endif /* MSI_VALUE */
  80:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  81:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #if !defined  (HSI_VALUE)
  82:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
  83:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #endif /* HSI_VALUE */
  84:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  85:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /* Note: Following vector table addresses must be defined in line with linker
  86:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****          configuration. */
ARM GAS  /tmp/cc8hhZL9.s 			page 3


  87:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /*!< Uncomment the following line if you need to relocate the vector table
  88:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  89:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****      remap of boot address selected */
  90:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #define USER_VECT_TAB_ADDRESS 
  91:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  92:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #if defined(USER_VECT_TAB_ADDRESS)
  93:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  94:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****      in Sram else user remap will be done in Flash. */
  95:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /* #define VECT_TAB_SRAM */
  96:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
  97:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #if defined(VECT_TAB_SRAM)
  98:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE_NS   /*!< Vector Table base address field.
  99:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                                                      This value must be a multiple of 0x200. */
 100:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #define VECT_TAB_OFFSET         0x00018000U     /*!< Vector Table base offset field.
 101:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                                                      This value must be a multiple of 0x200. */
 102:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #else
 103:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE_NS   /*!< Vector Table base address field.
 104:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                                                      This value must be a multiple of 0x200. */
 105:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #define VECT_TAB_OFFSET         0x00040100U     /*!< Vector Table base offset field.
 106:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                                                      This value must be a multiple of 0x200. */
 107:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #endif /* VECT_TAB_SRAM */
 108:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #endif /* USER_VECT_TAB_ADDRESS */
 109:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 110:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /******************************************************************************/
 111:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
 112:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @}
 113:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 114:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 115:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System_Private_Macros
 116:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
 117:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 118:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 119:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
 120:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @}
 121:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 122:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 123:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System_Private_Variables
 124:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
 125:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 126:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   /* The SystemCoreClock variable is updated in three ways:
 127:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 128:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 129:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 130:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****          Note: If you use this function to configure the system clock; then there
 131:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 132:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                variable is updated automatically.
 133:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 134:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   uint32_t SystemCoreClock = 4000000U;
 135:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 136:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 137:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 138:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   const uint32_t MSIRangeTable[16] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 139:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 140:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****                                       0U,       0U,       0U,        0U};  /* MISRAC-2012: 0U for u
 141:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
 142:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @}
 143:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
ARM GAS  /tmp/cc8hhZL9.s 			page 4


 144:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 145:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System_Private_FunctionPrototypes
 146:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
 147:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 148:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 149:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
 150:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @}
 151:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 152:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 153:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /** @addtogroup STM32L5xx_System_Private_Functions
 154:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @{
 155:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 156:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 157:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
 158:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @brief  Setup the microcontroller system.
 159:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @retval None
 160:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 161:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 162:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** void SystemInit(void)
 163:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** {
  30              		.loc 1 163 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 164:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   /* Vector table location and FPU setup done by secure application */
 165:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 166:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   /* Configure the Vector Table location -------------------------------------*/
 167:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #if defined(USER_VECT_TAB_ADDRESS)
 168:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
  35              		.loc 1 168 3 view .LVU1
  36              		.loc 1 168 13 is_stmt 0 view .LVU2
  37 0000 014B     		ldr	r3, .L2
  38 0002 024A     		ldr	r2, .L2+4
  39 0004 9A60     		str	r2, [r3, #8]
 169:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** #endif
 170:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 171:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   /* Non-secure main application shall call SystemCoreClockUpdate() to update */
 172:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   /* the SystemCoreClock variable to insure non-secure application relies on  */
 173:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   /* the initial clock reference set by secure application.                   */
 174:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** }
  40              		.loc 1 174 1 view .LVU3
  41 0006 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0008 00ED00E0 		.word	-536810240
  46 000c 00010408 		.word	134480128
  47              		.cfi_endproc
  48              	.LFE152:
  50              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  51              		.align	1
  52              		.global	SystemCoreClockUpdate
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	SystemCoreClockUpdate:
ARM GAS  /tmp/cc8hhZL9.s 			page 5


  58              	.LFB153:
 175:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** 
 176:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** /**
 177:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 178:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 179:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         be used by the user application to setup the SysTick timer or configure
 180:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         other parameters.
 181:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 182:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @note   From the non-secure application, the SystemCoreClock value is
 183:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         retrieved from the secure domain via a Non-Secure Callable function
 184:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         since the RCC peripheral may be protected with security attributes
 185:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         that prevent to compute the SystemCoreClock variable from the RCC
 186:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         peripheral registers.
 187:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 188:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 189:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 190:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         based on this variable will be incorrect.
 191:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 192:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @note   - The system frequency computed by this function is not the real
 193:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *           frequency in the chip. It is calculated based on the predefined
 194:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *           constant and the selected clock source:
 195:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 196:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 197:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 198:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 199:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 200:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 201:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 202:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 203:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 204:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 205:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         (*) MSI_VALUE is a constant defined in stm32l5xx_hal.h file (default value
 206:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *             4 MHz) but the real value may vary depending on the variations
 207:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *             in voltage and temperature.
 208:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 209:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         (**) HSI_VALUE is a constant defined in stm32l5xx_hal.h file (default value
 210:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *              16 MHz) but the real value may vary depending on the variations
 211:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *              in voltage and temperature.
 212:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 213:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         (***) HSE_VALUE is a constant defined in stm32l5xx_hal.h file (default value
 214:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 215:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *              frequency of the crystal used. Otherwise, this function may
 216:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *              have wrong result.
 217:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 218:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *         - The result of this function could be not correct when using fractional
 219:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *           value for HSE crystal.
 220:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   *
 221:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   * @retval None
 222:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   */
 223:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** void SystemCoreClockUpdate(void)
 224:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** {
  59              		.loc 1 224 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63 0000 08B5     		push	{r3, lr}
  64              	.LCFI0:
ARM GAS  /tmp/cc8hhZL9.s 			page 6


  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
 225:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   /* Get the SystemCoreClock value from the secure domain */
 226:../../NonSecure/Core/Src/system_stm32l5xx_ns.c ****   SystemCoreClock = SECURE_SystemCoreClockUpdate();
  68              		.loc 1 226 3 view .LVU5
  69              		.loc 1 226 21 is_stmt 0 view .LVU6
  70 0002 FFF7FEFF 		bl	SECURE_SystemCoreClockUpdate
  71              	.LVL0:
  72              		.loc 1 226 19 view .LVU7
  73 0006 014B     		ldr	r3, .L6
  74 0008 1860     		str	r0, [r3]
 227:../../NonSecure/Core/Src/system_stm32l5xx_ns.c **** }
  75              		.loc 1 227 1 view .LVU8
  76 000a 08BD     		pop	{r3, pc}
  77              	.L7:
  78              		.align	2
  79              	.L6:
  80 000c 00000000 		.word	SystemCoreClock
  81              		.cfi_endproc
  82              	.LFE153:
  84              		.global	MSIRangeTable
  85              		.section	.rodata.MSIRangeTable,"a"
  86              		.align	2
  89              	MSIRangeTable:
  90 0000 A0860100 		.word	100000
  91 0004 400D0300 		.word	200000
  92 0008 801A0600 		.word	400000
  93 000c 00350C00 		.word	800000
  94 0010 40420F00 		.word	1000000
  95 0014 80841E00 		.word	2000000
  96 0018 00093D00 		.word	4000000
  97 001c 00127A00 		.word	8000000
  98 0020 0024F400 		.word	16000000
  99 0024 00366E01 		.word	24000000
 100 0028 0048E801 		.word	32000000
 101 002c 006CDC02 		.word	48000000
 102 0030 00000000 		.word	0
 103 0034 00000000 		.word	0
 104 0038 00000000 		.word	0
 105 003c 00000000 		.word	0
 106              		.global	APBPrescTable
 107              		.section	.rodata.APBPrescTable,"a"
 108              		.align	2
 111              	APBPrescTable:
 112 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 112      01020304 
 113              		.global	AHBPrescTable
 114              		.section	.rodata.AHBPrescTable,"a"
 115              		.align	2
 118              	AHBPrescTable:
 119 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 119      00000000 
 119      01020304 
 119      06
 120 000d 070809   		.ascii	"\007\010\011"
 121              		.global	SystemCoreClock
ARM GAS  /tmp/cc8hhZL9.s 			page 7


 122              		.section	.data.SystemCoreClock,"aw"
 123              		.align	2
 126              	SystemCoreClock:
 127 0000 00093D00 		.word	4000000
 128              		.text
 129              	.Letext0:
 130              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 131              		.file 3 "../../Drivers/CMSIS/Include/core_cm33.h"
 132              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32L5xx/Include/system_stm32l5xx.h"
ARM GAS  /tmp/cc8hhZL9.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l5xx_ns.c
     /tmp/cc8hhZL9.s:22     .text.SystemInit:00000000 $t
     /tmp/cc8hhZL9.s:28     .text.SystemInit:00000000 SystemInit
     /tmp/cc8hhZL9.s:45     .text.SystemInit:00000008 $d
     /tmp/cc8hhZL9.s:51     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/cc8hhZL9.s:57     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/cc8hhZL9.s:80     .text.SystemCoreClockUpdate:0000000c $d
     /tmp/cc8hhZL9.s:126    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/cc8hhZL9.s:89     .rodata.MSIRangeTable:00000000 MSIRangeTable
     /tmp/cc8hhZL9.s:86     .rodata.MSIRangeTable:00000000 $d
     /tmp/cc8hhZL9.s:111    .rodata.APBPrescTable:00000000 APBPrescTable
     /tmp/cc8hhZL9.s:108    .rodata.APBPrescTable:00000000 $d
     /tmp/cc8hhZL9.s:118    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/cc8hhZL9.s:115    .rodata.AHBPrescTable:00000000 $d
     /tmp/cc8hhZL9.s:123    .data.SystemCoreClock:00000000 $d

UNDEFINED SYMBOLS
SECURE_SystemCoreClockUpdate
