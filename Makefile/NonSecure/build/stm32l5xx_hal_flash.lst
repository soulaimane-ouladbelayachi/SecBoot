ARM GAS  /tmp/ccET3dN6.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"stm32l5xx_hal_flash.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c"
  21              		.section	.text.FLASH_Program_DoubleWord,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	FLASH_Program_DoubleWord:
  28              	.LVL0:
  29              	.LFB164:
   1:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
   2:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   ******************************************************************************
   3:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @file    stm32l5xx_hal_flash.c
   4:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *           + Program operations functions
   9:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *           + Memory Control functions
  10:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *
  12:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   ******************************************************************************
  13:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @attention
  14:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *
  15:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * Copyright (c) 2019 STMicroelectronics.
  16:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * All rights reserved.
  17:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *
  18:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  19:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * the root directory of this software component.
  20:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   ******************************************************************************
  22:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  @verbatim
  23:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   ==============================================================================
  24:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                         ##### Flash peripheral features #####
  25:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   ==============================================================================
  26:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  27:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB C-Bus accesses
  28:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  29:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****        and the read and write protection mechanisms.
ARM GAS  /tmp/ccET3dN6.s 			page 2


  30:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  31:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   [..] The Flash memory interface implements the TrustZone security features (TZ) supported
  32:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****        by ARM Cortex-M33 core (CM33).
  33:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  34:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   [..] The FLASH main features are:
  35:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (+) Flash memory read operations
  36:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (+) Flash memory program/erase operations
  37:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (+) Read / write protections
  38:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (+) Option bytes programming
  39:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 	  (+) TrustZone aware
  40:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 	  (+) Watermark-based area protection including secure hide area
  41:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 	  (+) Block-based page protection
  42:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 72-bits word
  43:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****           (8 bits added per double word)
  44:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  45:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                         ##### How to use this driver #####
  46:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  ==============================================================================
  47:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     [..]
  48:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  49:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       memory of all STM32L5xx devices.
  50:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  51:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (#) Flash Memory IO Programming functions:
  52:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  53:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  54:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) Program functions: double word
  55:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) There Two modes of programming :
  56:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  57:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  58:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  59:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (#) Interrupts and flags management functions :
  60:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  61:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  62:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  63:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  64:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) Get error flag status by calling HAL_GetError()
  65:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  66:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       (#) Option bytes management functions :
  67:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  68:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  69:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_Launch() function.
  70:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                 In this case, a reset is generated
  71:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  72:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     [..]
  73:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  74:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       to handle the following operations:
  75:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****        (+) Set the latency
  76:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****        (+) Enable/Disable the Flash power-down during low-power run and sleep modes
  77:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****        (+) Enable/Disable the Flash interrupts
  78:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****        (+) Monitor the Flash flags status
  79:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  80:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  @endverbatim
  81:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   ******************************************************************************
  82:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
  83:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  84:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  85:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #include "stm32l5xx_hal.h"
  86:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
ARM GAS  /tmp/ccET3dN6.s 			page 3


  87:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @addtogroup STM32L5xx_HAL_Driver
  88:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @{
  89:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
  90:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  91:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @defgroup FLASH FLASH
  92:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief FLASH HAL module driver
  93:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @{
  94:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
  95:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  96:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  97:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
  98:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
  99:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Private defines -----------------------------------------------------------*/
 100:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Private macros ------------------------------------------------------------*/
 101:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 102:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @defgroup FLASH_Private_Variables FLASH Private Variables
 103:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  * @{
 104:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  */
 105:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 106:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Variable used for Program/Erase sectors under interruption
 107:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 108:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash = {.Lock = HAL_UNLOCKED, \
 109:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                                .ErrorCode = HAL_FLASH_ERROR_NONE, \
 110:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                                .ProcedureOnGoing = 0U, \
 111:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                                .Address = 0U, \
 112:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                                .Bank = FLASH_BANK_1, \
 113:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                                .Page = 0U, \
 114:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                                .NbPagesToErase = 0U};
 115:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 116:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @}
 117:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 118:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 119:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 120:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private Functions
 121:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  * @{
 122:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  */
 123:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 124:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 125:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @}
 126:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 127:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 128:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 129:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
 130:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @{
 131:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 132:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 133:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming Operation functions
 134:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  *  @brief   Programming Operation functions
 135:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  *
 136:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** @verbatim
 137:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  ===============================================================================
 138:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                   ##### Programming Operation functions #####
 139:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  ===============================================================================
 140:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     [..]
 141:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 142:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     program operations.
 143:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
ARM GAS  /tmp/ccET3dN6.s 			page 4


 144:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** @endverbatim
 145:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @{
 146:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 147:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 148:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 149:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Program double word at a specified address.
 150:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 151:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 152:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  Address  specifies the address to be programmed.
 153:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  Data specifies the data to be programmed
 154:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                This parameter is the data for the double word program
 155:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *
 156:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 157:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 158:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 159:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 160:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 161:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg;
 162:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 163:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Check the parameters */
 164:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 165:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 166:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Process Locked */
 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 168:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 169:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Reset error code */
 170:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 171:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 172:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Wait for last operation to be completed */
 173:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 174:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 175:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(status == HAL_OK)
 176:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 177:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.ProcedureOnGoing = TypeProgram;
 178:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 179:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 180:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Program double-word (64-bit) at a specified address */
 181:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     FLASH_Program_DoubleWord(Address, Data);
 182:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 183:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Wait for last operation to be completed */
 184:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 185:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 186:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* If the program operation is completed, disable the PG Bit */
 187:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     CLEAR_BIT((*reg), (pFlash.ProcedureOnGoing & ~(FLASH_NON_SECURE_MASK)));
 188:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 189:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 190:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Process Unlocked */
 191:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 192:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 193:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return status;
 194:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 195:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 196:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 197:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Program double word at a specified address with interrupt enabled.
 198:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 199:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 200:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  Address  specifies the address to be programmed.
ARM GAS  /tmp/ccET3dN6.s 			page 5


 201:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  Data specifies the data to be programmed
 202:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                This parameter is the data for the double word program
 203:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *
 204:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL Status
 205:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 206:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 207:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 208:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 209:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 210:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 211:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Check the parameters */
 212:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 213:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 214:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Process Locked */
 215:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 216:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 217:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Reset error code */
 218:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 219:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 220:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Wait for last operation to be completed */
 221:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 222:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 223:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if (status != HAL_OK)
 224:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 225:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Process Unlocked */
 226:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 227:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 228:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   else
 229:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 230:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 231:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.ProcedureOnGoing = TypeProgram;
 232:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.Address = Address;
 233:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     
 234:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Access to SECCR or NSCR depends on operation type */
 235:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     reg_cr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 236:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 237:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Enable End of Operation and Error interrupts */
 238:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     (*reg_cr) |= (FLASH_IT_EOP | FLASH_IT_OPERR);
 239:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 240:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Program double-word (64-bit) at a specified address */
 241:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     FLASH_Program_DoubleWord(Address, Data);
 242:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 243:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 244:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return status;
 245:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 246:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 247:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 248:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief Handle FLASH interrupt request.
 249:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval None
 250:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 251:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 252:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 253:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t param = 0U;
 254:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t error, type;
 255:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg;
 256:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 257:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
ARM GAS  /tmp/ccET3dN6.s 			page 6


 258:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   type = (pFlash.ProcedureOnGoing & ~(FLASH_NON_SECURE_MASK));
 259:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 260:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg_sr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECSR) : &(FLASH_NS->NSSR);
 261:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 262:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Save Flash errors */
 263:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   error = (*reg_sr) & FLASH_FLAG_SR_ERRORS;
 264:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 265:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   error |= (FLASH->NSSR & FLASH_FLAG_OPTWERR);
 266:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 267:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 268:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Set parameter of the callback */
 269:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(type == FLASH_TYPEERASE_PAGES)
 270:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 271:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     param = pFlash.Page;
 272:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 273:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   else if(type == FLASH_TYPEERASE_MASSERASE)
 274:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 275:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     param = pFlash.Bank;
 276:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 277:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   else if(type == FLASH_TYPEPROGRAM_DOUBLEWORD)
 278:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 279:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     param = pFlash.Address;
 280:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 281:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   else
 282:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 283:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Empty statement (to be compliant MISRA 15.7) */
 284:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 285:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 286:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Clear bit on the on-going procedure */
 287:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   CLEAR_BIT((*reg), type);
 288:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 289:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Check FLASH operation error flags */
 290:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(error != 0U)
 291:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 292:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Save the error code */
 293:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.ErrorCode |= error;
 294:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 295:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Clear error programming flags */
 296:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     (*reg_sr) = error;
 297:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 298:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if ((error & FLASH_FLAG_OPTWERR) != 0U)
 299:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 300:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       FLASH->NSSR = FLASH_FLAG_OPTWERR;
 301:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 302:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 303:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 304:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Stop the procedure ongoing */
 305:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.ProcedureOnGoing = 0U;
 306:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 307:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 308:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(param);
 309:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 310:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 311:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 312:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if (((*reg_sr) & FLASH_FLAG_EOP) != 0U)
 313:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 314:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
ARM GAS  /tmp/ccET3dN6.s 			page 7


 315:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     (*reg_sr) = FLASH_FLAG_EOP;
 316:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 317:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if(type == FLASH_TYPEERASE_PAGES)
 318:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 319:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       /* Nb of pages to erased can be decreased */
 320:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       pFlash.NbPagesToErase--;
 321:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 322:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       /* Check if there are still pages to erase*/
 323:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       if(pFlash.NbPagesToErase != 0U)
 324:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 325:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         /* Increment page number */
 326:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         pFlash.Page++;
 327:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 328:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 329:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       else
 330:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 331:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         /* No more pages to Erase */
 332:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         pFlash.ProcedureOnGoing = 0U;
 333:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         param = 0xFFFFFFFFU;
 334:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 335:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 336:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     else
 337:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 338:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       /*Clear the procedure ongoing*/
 339:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       pFlash.ProcedureOnGoing = 0U;
 340:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 341:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 342:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* FLASH EOP interrupt user callback */
 343:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     HAL_FLASH_EndOfOperationCallback(param);
 344:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 345:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 346:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == 0U)
 347:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 348:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Disable End of Operation and Error interrupts */
 349:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     (*reg) &= ~(FLASH_IT_EOP | FLASH_IT_OPERR);
 350:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 351:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Process Unlocked */
 352:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 353:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 354:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 355:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 356:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 357:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback.
 358:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure :
 359:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                  @arg Mass Erase: Bank number which has been requested to erase
 360:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                  @arg Page Erase: Page which has been erased
 361:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                       (if 0xFFFFFFFF, it means that all the selected pages have been erased)
 362:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                  @arg Program: Address which was selected for data program
 363:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval None
 364:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 365:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 366:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 367:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 368:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   UNUSED(ReturnValue);
 369:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 370:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 371:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
ARM GAS  /tmp/ccET3dN6.s 			page 8


 372:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****    */
 373:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 374:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 375:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 376:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback.
 377:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure :
 378:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                 @arg Mass Erase: Bank number which has been requested to erase
 379:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                 @arg Page Erase: Page number which returned an error
 380:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *                 @arg Program: Address which was selected for data program
 381:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval None
 382:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 383:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 384:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 385:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 386:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   UNUSED(ReturnValue);
 387:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 388:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 389:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 390:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****    */
 391:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 392:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 393:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 394:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @}
 395:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 396:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 397:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 398:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  *  @brief   Management functions
 399:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  *
 400:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** @verbatim
 401:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  ===============================================================================
 402:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 403:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  ===============================================================================
 404:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     [..]
 405:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 406:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     memory operations.
 407:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 408:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** @endverbatim
 409:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @{
 410:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 411:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 412:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 413:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Unlock the FLASH control register access.
 414:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL Status
 415:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 416:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 417:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 418:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 419:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 420:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(READ_BIT(FLASH->NSCR, FLASH_NSCR_NSLOCK) != 0u)
 421:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 422:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 423:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     WRITE_REG(FLASH->NSKEYR, FLASH_KEY1);
 424:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     WRITE_REG(FLASH->NSKEYR, FLASH_KEY2);
 425:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 426:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* verify Flash is unlocked */
 427:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if (READ_BIT(FLASH->NSCR, FLASH_NSCR_NSLOCK) != 0u)
 428:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
ARM GAS  /tmp/ccET3dN6.s 			page 9


 429:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       status = HAL_ERROR;
 430:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 431:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 432:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 433:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 434:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if (status == HAL_OK)
 435:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 436:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if(READ_BIT(FLASH->SECCR, FLASH_SECCR_SECLOCK) != 0u)
 437:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 438:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       /* Authorize the FLASH Registers access */
 439:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       WRITE_REG(FLASH->SECKEYR, FLASH_KEY1);
 440:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       WRITE_REG(FLASH->SECKEYR, FLASH_KEY2);
 441:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 442:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       /* verify Flash is unlocked */
 443:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       if (READ_BIT(FLASH->SECCR, FLASH_SECCR_SECLOCK) != 0u)
 444:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 445:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         status = HAL_ERROR;
 446:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 447:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 448:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 449:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #endif
 450:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 451:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return status;
 452:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 453:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 454:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 455:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Lock the FLASH control register access.
 456:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL Status
 457:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 458:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 459:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 460:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 461:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 462:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 463:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   SET_BIT(FLASH->NSCR, FLASH_NSCR_NSLOCK);
 464:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 465:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* verify Flash is locked */
 466:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if (READ_BIT(FLASH->NSCR, FLASH_NSCR_NSLOCK) != 0u)
 467:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 468:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     status = HAL_OK;
 469:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 470:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 471:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 472:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if (status == HAL_OK)
 473:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 474:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     SET_BIT(FLASH->SECCR, FLASH_SECCR_SECLOCK);
 475:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 476:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* verify Flash is locked */
 477:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if (READ_BIT(FLASH->SECCR, FLASH_SECCR_SECLOCK) != 0u)
 478:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 479:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       status = HAL_OK;
 480:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 481:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 482:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #endif
 483:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 484:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return status;
 485:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
ARM GAS  /tmp/ccET3dN6.s 			page 10


 486:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 487:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 488:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Bytes Registers access.
 489:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL Status
 490:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 491:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 492:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 493:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0u)
 494:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 495:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 496:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY1);
 497:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 498:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 499:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Verify that the Option Bytes are unlocked */
 500:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if (READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0u)
 501:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 502:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       return HAL_ERROR;
 503:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 504:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 505:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 506:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return HAL_OK;
 507:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 508:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 509:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 510:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Lock the FLASH Option Bytes Registers access.
 511:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL Status
 512:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 513:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 514:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 515:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 516:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   SET_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK);
 517:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 518:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Verify that the Option Bytes are locked */
 519:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if (READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0u)
 520:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 521:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     return HAL_OK;
 522:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 523:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 524:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return HAL_ERROR;
 525:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 526:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 527:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 528:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 529:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL Status
 530:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 531:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 532:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 533:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 534:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   SET_BIT(FLASH->NSCR, FLASH_NSCR_OBL_LAUNCH);
 535:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 536:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* We should not reach here : Option byte launch generates Option byte reset
 537:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****      so return error */
 538:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return HAL_ERROR;
 539:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 540:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 541:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 542:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @}
ARM GAS  /tmp/ccET3dN6.s 			page 11


 543:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 544:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 545:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 546:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 547:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  *
 548:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** @verbatim
 549:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  ===============================================================================
 550:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 551:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****  ===============================================================================
 552:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     [..]
 553:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 554:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 555:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** @endverbatim
 556:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @{
 557:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 558:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 559:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 560:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 561:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval FLASH_ErrorCode The returned value can be:
 562:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE: No error set
 563:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OP: FLASH Operation error
 564:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PROG: FLASH Programming error
 565:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP: FLASH Write protection error
 566:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGA: FLASH Programming alignment error
 567:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SIZ: FLASH Size error
 568:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS: FLASH Programming sequence error
 569:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPTW: FLASH Option modification error
 570:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 571:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 572:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 573:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****    return pFlash.ErrorCode;
 574:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 575:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 576:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 577:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @}
 578:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 579:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 580:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 581:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @}
 582:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 583:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 584:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 585:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 586:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 587:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @{
 588:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 589:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 590:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 591:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 592:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 593:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 594:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 595:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 596:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
 597:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 598:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 599:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****      flag will be set */
ARM GAS  /tmp/ccET3dN6.s 			page 12


 600:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 601:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t timeout = HAL_GetTick() + Timeout;
 602:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t error;
 603:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 604:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 605:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY))
 606:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 607:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 608:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 609:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       if(HAL_GetTick() >= timeout)
 610:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 611:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         return HAL_TIMEOUT;
 612:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 613:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 614:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 615:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   
 616:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Access to SECSR or NSSR registers depends on operation type */
 617:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg_sr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECSR) : &(FLASH_NS->NSSR);
 618:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 619:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Check FLASH operation error flags */
 620:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   error = ((*reg_sr) & FLASH_FLAG_SR_ERRORS);
 621:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 622:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   error |= (FLASH->NSSR & FLASH_FLAG_OPTWERR);
 623:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */ 
 624:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 625:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(error != 0u)
 626:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 627:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /*Save the error code*/
 628:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.ErrorCode |= error;
 629:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 630:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Clear error programming flags */
 631:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     (*reg_sr) = error;
 632:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 633:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     if ((error & FLASH_FLAG_OPTWERR) != 0U)
 634:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 635:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       FLASH->NSSR = FLASH_FLAG_OPTWERR;
 636:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 637:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 638:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 639:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     return HAL_ERROR;
 640:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 641:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 642:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 643:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if (((*reg_sr) & FLASH_FLAG_EOP) != 0U)
 644:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 645:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 646:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     (*reg_sr) = FLASH_FLAG_EOP;
 647:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 648:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 649:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* If there is an error flag set */
 650:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   return HAL_OK;
 651:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 652:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 653:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** /**
 654:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @brief  Program double-word (64-bit) at a specified address.
 655:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 656:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
ARM GAS  /tmp/ccET3dN6.s 			page 13


 657:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   * @retval None
 658:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   */
 659:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 660:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** {
  30              		.loc 1 660 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 660 1 is_stmt 0 view .LVU1
  36 0000 10B4     		push	{r4}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 4, -4
 661:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t primask_bit;
  40              		.loc 1 661 3 is_stmt 1 view .LVU2
 662:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg;
  41              		.loc 1 662 3 view .LVU3
 663:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Check the parameters */
 664:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
  42              		.loc 1 664 3 view .LVU4
 665:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   
 666:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Access to SECCR or NSCR registers depends on operation type */
 667:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
  43              		.loc 1 667 3 view .LVU5
  44              	.LVL1:
 668:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 669:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Disable interrupts to avoid any interruption during the double word programming */
 670:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   primask_bit = __get_PRIMASK();
  45              		.loc 1 670 3 view .LVU6
  46              	.LBB10:
  47              	.LBI10:
  48              		.file 2 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccET3dN6.s 			page 14


  25:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccET3dN6.s 			page 15


  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  /tmp/ccET3dN6.s 			page 16


 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccET3dN6.s 			page 17


 196:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccET3dN6.s 			page 18


 253:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccET3dN6.s 			page 19


 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  /tmp/ccET3dN6.s 			page 20


 367:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
ARM GAS  /tmp/ccET3dN6.s 			page 21


 424:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
  49              		.loc 2 449 31 view .LVU7
  50              	.LBB11:
 450:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  51              		.loc 2 451 3 view .LVU8
 452:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  52              		.loc 2 453 3 view .LVU9
  53              		.syntax unified
  54              	@ 453 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  55 0002 EFF3108C 		MRS ip, primask
  56              	@ 0 "" 2
  57              	.LVL2:
 454:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  58              		.loc 2 454 3 view .LVU10
  59              		.loc 2 454 3 is_stmt 0 view .LVU11
  60              		.thumb
  61              		.syntax unified
  62              	.LBE11:
  63              	.LBE10:
 671:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __disable_irq();
  64              		.loc 1 671 3 is_stmt 1 view .LVU12
  65              	.LBB12:
  66              	.LBI12:
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  67              		.loc 2 207 27 view .LVU13
  68              	.LBB13:
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  69              		.loc 2 209 3 view .LVU14
  70              		.syntax unified
  71              	@ 209 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccET3dN6.s 			page 22


  72 0006 72B6     		cpsid i
  73              	@ 0 "" 2
  74              		.thumb
  75              		.syntax unified
  76              	.LBE13:
  77              	.LBE12:
 672:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 673:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Set PG bit */
 674:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   SET_BIT((*reg), FLASH_NSCR_NSPG);
  78              		.loc 1 674 3 view .LVU15
  79 0008 064C     		ldr	r4, .L3
  80 000a A16A     		ldr	r1, [r4, #40]
  81 000c 41F00101 		orr	r1, r1, #1
  82 0010 A162     		str	r1, [r4, #40]
 675:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 676:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Program first word */
 677:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *(uint32_t*)Address = (uint32_t)Data;
  83              		.loc 1 677 3 view .LVU16
  84              		.loc 1 677 23 is_stmt 0 view .LVU17
  85 0012 0260     		str	r2, [r0]
 678:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 679:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 680:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     (independently of compiler optimization behavior) */
 681:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __ISB();
  86              		.loc 1 681 3 is_stmt 1 view .LVU18
  87              	.LBB14:
  88              	.LBI14:
 455:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccET3dN6.s 			page 23


 485:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  /tmp/ccET3dN6.s 			page 24


 542:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  /tmp/ccET3dN6.s 			page 25


 599:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccET3dN6.s 			page 26


 656:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccET3dN6.s 			page 27


 713:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
ARM GAS  /tmp/ccET3dN6.s 			page 28


 770:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccET3dN6.s 			page 29


 827:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/ccET3dN6.s 			page 30


 884:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
  89              		.loc 2 933 27 view .LVU19
  90              	.LBB15:
 934:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
  91              		.loc 2 935 3 view .LVU20
  92              		.syntax unified
  93              	@ 935 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccET3dN6.s 			page 31


  94 0014 BFF36F8F 		isb 0xF
  95              	@ 0 "" 2
  96              		.thumb
  97              		.syntax unified
  98              	.LBE15:
  99              	.LBE14:
 682:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 683:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Program second word */
 684:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   *(uint32_t*)(Address+4U) = (uint32_t)(Data >> 32U);
 100              		.loc 1 684 3 view .LVU21
 101              		.loc 1 684 28 is_stmt 0 view .LVU22
 102 0018 4360     		str	r3, [r0, #4]
 685:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 686:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Re-enable the interrupts */
 687:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 103              		.loc 1 687 3 is_stmt 1 view .LVU23
 104              	.LVL3:
 105              	.LBB16:
 106              	.LBI16:
 479:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107              		.loc 2 479 27 view .LVU24
 108              	.LBB17:
 481:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 109              		.loc 2 481 3 view .LVU25
 110              		.syntax unified
 111              	@ 481 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 112 001a 8CF31088 		MSR primask, ip
 113              	@ 0 "" 2
 114              	.LVL4:
 481:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 115              		.loc 2 481 3 is_stmt 0 view .LVU26
 116              		.thumb
 117              		.syntax unified
 118              	.LBE17:
 119              	.LBE16:
 688:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 120              		.loc 1 688 1 view .LVU27
 121 001e 5DF8044B 		ldr	r4, [sp], #4
 122              	.LCFI1:
 123              		.cfi_restore 4
 124              		.cfi_def_cfa_offset 0
 125 0022 7047     		bx	lr
 126              	.L4:
 127              		.align	2
 128              	.L3:
 129 0024 00200240 		.word	1073881088
 130              		.cfi_endproc
 131              	.LFE164:
 133              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 134              		.align	1
 135              		.weak	HAL_FLASH_EndOfOperationCallback
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	HAL_FLASH_EndOfOperationCallback:
 141              	.LVL5:
 142              	.LFB155:
ARM GAS  /tmp/ccET3dN6.s 			page 32


 366:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 143              		.loc 1 366 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 368:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 148              		.loc 1 368 3 view .LVU29
 373:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 149              		.loc 1 373 1 is_stmt 0 view .LVU30
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE155:
 154              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 155              		.align	1
 156              		.weak	HAL_FLASH_OperationErrorCallback
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	HAL_FLASH_OperationErrorCallback:
 162              	.LVL6:
 163              	.LFB156:
 384:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 164              		.loc 1 384 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 386:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 169              		.loc 1 386 3 view .LVU32
 391:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 170              		.loc 1 391 1 is_stmt 0 view .LVU33
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE156:
 175              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 176              		.align	1
 177              		.global	HAL_FLASH_IRQHandler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 182              	HAL_FLASH_IRQHandler:
 183              	.LFB154:
 252:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t param = 0U;
 184              		.loc 1 252 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 38B5     		push	{r3, r4, r5, lr}
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 16
 191              		.cfi_offset 3, -16
 192              		.cfi_offset 4, -12
 193              		.cfi_offset 5, -8
 194              		.cfi_offset 14, -4
 253:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t error, type;
 195              		.loc 1 253 3 view .LVU35
ARM GAS  /tmp/ccET3dN6.s 			page 33


 196              	.LVL7:
 254:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg;
 197              		.loc 1 254 3 view .LVU36
 255:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 198              		.loc 1 255 3 view .LVU37
 256:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 199              		.loc 1 256 3 view .LVU38
 258:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 200              		.loc 1 258 3 view .LVU39
 258:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 201              		.loc 1 258 17 is_stmt 0 view .LVU40
 202 0002 2F4B     		ldr	r3, .L25
 203 0004 9C68     		ldr	r4, [r3, #8]
 258:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 204              		.loc 1 258 8 view .LVU41
 205 0006 24F00044 		bic	r4, r4, #-2147483648
 206              	.LVL8:
 259:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   reg_sr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECSR) : &(FLASH_NS->NSSR);
 207              		.loc 1 259 3 is_stmt 1 view .LVU42
 260:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 208              		.loc 1 260 3 view .LVU43
 263:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 209              		.loc 1 263 3 view .LVU44
 263:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 210              		.loc 1 263 12 is_stmt 0 view .LVU45
 211 000a 2E4B     		ldr	r3, .L25+4
 212 000c 1B6A     		ldr	r3, [r3, #32]
 263:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 213              		.loc 1 263 9 view .LVU46
 214 000e 23F4F853 		bic	r3, r3, #7936
 215 0012 23F00503 		bic	r3, r3, #5
 216 0016 9B04     		lsls	r3, r3, #18
 217 0018 9B0C     		lsrs	r3, r3, #18
 218              	.LVL9:
 269:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 219              		.loc 1 269 3 is_stmt 1 view .LVU47
 269:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 220              		.loc 1 269 5 is_stmt 0 view .LVU48
 221 001a 022C     		cmp	r4, #2
 222 001c 07D0     		beq	.L19
 273:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 223              		.loc 1 273 8 is_stmt 1 view .LVU49
 273:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 224              		.loc 1 273 10 is_stmt 0 view .LVU50
 225 001e 48F20402 		movw	r2, #32772
 226 0022 9442     		cmp	r4, r2
 227 0024 27D0     		beq	.L20
 277:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 228              		.loc 1 277 8 is_stmt 1 view .LVU51
 277:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 229              		.loc 1 277 10 is_stmt 0 view .LVU52
 230 0026 012C     		cmp	r4, #1
 231 0028 28D0     		beq	.L21
 253:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t error, type;
 232              		.loc 1 253 12 view .LVU53
 233 002a 0025     		movs	r5, #0
 234 002c 01E0     		b	.L9
ARM GAS  /tmp/ccET3dN6.s 			page 34


 235              	.L19:
 271:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 236              		.loc 1 271 5 is_stmt 1 view .LVU54
 271:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 237              		.loc 1 271 11 is_stmt 0 view .LVU55
 238 002e 244A     		ldr	r2, .L25
 239 0030 5569     		ldr	r5, [r2, #20]
 240              	.LVL10:
 241              	.L9:
 284:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 242              		.loc 1 284 3 is_stmt 1 view .LVU56
 287:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 243              		.loc 1 287 3 view .LVU57
 244 0032 2449     		ldr	r1, .L25+4
 245 0034 8A6A     		ldr	r2, [r1, #40]
 246 0036 22EA0402 		bic	r2, r2, r4
 247 003a 8A62     		str	r2, [r1, #40]
 290:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 248              		.loc 1 290 3 view .LVU58
 290:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 249              		.loc 1 290 5 is_stmt 0 view .LVU59
 250 003c 0BBB     		cbnz	r3, .L22
 251              	.LVL11:
 252              	.L11:
 312:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 253              		.loc 1 312 3 is_stmt 1 view .LVU60
 312:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 254              		.loc 1 312 9 is_stmt 0 view .LVU61
 255 003e 214B     		ldr	r3, .L25+4
 256 0040 1B6A     		ldr	r3, [r3, #32]
 312:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 257              		.loc 1 312 6 view .LVU62
 258 0042 13F0010F 		tst	r3, #1
 259 0046 0AD0     		beq	.L12
 315:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 260              		.loc 1 315 5 is_stmt 1 view .LVU63
 315:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 261              		.loc 1 315 15 is_stmt 0 view .LVU64
 262 0048 1E4B     		ldr	r3, .L25+4
 263 004a 0122     		movs	r2, #1
 264 004c 1A62     		str	r2, [r3, #32]
 317:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 265              		.loc 1 317 5 is_stmt 1 view .LVU65
 317:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 266              		.loc 1 317 7 is_stmt 0 view .LVU66
 267 004e 022C     		cmp	r4, #2
 268 0050 23D0     		beq	.L23
 339:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 269              		.loc 1 339 7 is_stmt 1 view .LVU67
 339:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 270              		.loc 1 339 31 is_stmt 0 view .LVU68
 271 0052 1B4B     		ldr	r3, .L25
 272 0054 0022     		movs	r2, #0
 273 0056 9A60     		str	r2, [r3, #8]
 274              	.LVL12:
 275              	.L15:
 343:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
ARM GAS  /tmp/ccET3dN6.s 			page 35


 276              		.loc 1 343 5 is_stmt 1 view .LVU69
 277 0058 2846     		mov	r0, r5
 278 005a FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 279              	.LVL13:
 280              	.L12:
 346:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 281              		.loc 1 346 3 view .LVU70
 346:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 282              		.loc 1 346 12 is_stmt 0 view .LVU71
 283 005e 184B     		ldr	r3, .L25
 284 0060 9B68     		ldr	r3, [r3, #8]
 346:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 285              		.loc 1 346 5 view .LVU72
 286 0062 3BB9     		cbnz	r3, .L7
 349:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 287              		.loc 1 349 5 is_stmt 1 view .LVU73
 349:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 288              		.loc 1 349 6 is_stmt 0 view .LVU74
 289 0064 174A     		ldr	r2, .L25+4
 290 0066 936A     		ldr	r3, [r2, #40]
 349:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 291              		.loc 1 349 12 view .LVU75
 292 0068 23F04073 		bic	r3, r3, #50331648
 293 006c 9362     		str	r3, [r2, #40]
 352:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 294              		.loc 1 352 5 is_stmt 1 view .LVU76
 352:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 295              		.loc 1 352 5 view .LVU77
 296 006e 144B     		ldr	r3, .L25
 297 0070 0022     		movs	r2, #0
 298 0072 1A70     		strb	r2, [r3]
 352:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 299              		.loc 1 352 5 view .LVU78
 300              	.L7:
 354:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 301              		.loc 1 354 1 is_stmt 0 view .LVU79
 302 0074 38BD     		pop	{r3, r4, r5, pc}
 303              	.LVL14:
 304              	.L20:
 275:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 305              		.loc 1 275 5 is_stmt 1 view .LVU80
 275:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 306              		.loc 1 275 11 is_stmt 0 view .LVU81
 307 0076 124A     		ldr	r2, .L25
 308 0078 1569     		ldr	r5, [r2, #16]
 309              	.LVL15:
 275:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 310              		.loc 1 275 11 view .LVU82
 311 007a DAE7     		b	.L9
 312              	.LVL16:
 313              	.L21:
 279:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 314              		.loc 1 279 5 is_stmt 1 view .LVU83
 279:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 315              		.loc 1 279 11 is_stmt 0 view .LVU84
 316 007c 104A     		ldr	r2, .L25
 317 007e D568     		ldr	r5, [r2, #12]
ARM GAS  /tmp/ccET3dN6.s 			page 36


 318              	.LVL17:
 279:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 319              		.loc 1 279 11 view .LVU85
 320 0080 D7E7     		b	.L9
 321              	.L22:
 293:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 322              		.loc 1 293 5 is_stmt 1 view .LVU86
 293:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 323              		.loc 1 293 11 is_stmt 0 view .LVU87
 324 0082 0F4A     		ldr	r2, .L25
 325 0084 5168     		ldr	r1, [r2, #4]
 293:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 326              		.loc 1 293 22 view .LVU88
 327 0086 1943     		orrs	r1, r1, r3
 328 0088 5160     		str	r1, [r2, #4]
 296:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 329              		.loc 1 296 5 is_stmt 1 view .LVU89
 296:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 330              		.loc 1 296 15 is_stmt 0 view .LVU90
 331 008a 0E49     		ldr	r1, .L25+4
 332 008c 0B62     		str	r3, [r1, #32]
 305:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 333              		.loc 1 305 5 is_stmt 1 view .LVU91
 305:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 334              		.loc 1 305 29 is_stmt 0 view .LVU92
 335 008e 0023     		movs	r3, #0
 336              	.LVL18:
 305:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 337              		.loc 1 305 29 view .LVU93
 338 0090 9360     		str	r3, [r2, #8]
 308:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 339              		.loc 1 308 5 is_stmt 1 view .LVU94
 340 0092 2846     		mov	r0, r5
 341 0094 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 342              	.LVL19:
 308:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 343              		.loc 1 308 5 is_stmt 0 view .LVU95
 344 0098 D1E7     		b	.L11
 345              	.L23:
 320:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 346              		.loc 1 320 7 is_stmt 1 view .LVU96
 320:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 347              		.loc 1 320 13 is_stmt 0 view .LVU97
 348 009a 094A     		ldr	r2, .L25
 349 009c 9369     		ldr	r3, [r2, #24]
 320:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 350              		.loc 1 320 28 view .LVU98
 351 009e 013B     		subs	r3, r3, #1
 352 00a0 9361     		str	r3, [r2, #24]
 323:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 353              		.loc 1 323 7 is_stmt 1 view .LVU99
 323:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 354              		.loc 1 323 9 is_stmt 0 view .LVU100
 355 00a2 2BB9     		cbnz	r3, .L24
 332:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         param = 0xFFFFFFFFU;
 356              		.loc 1 332 9 is_stmt 1 view .LVU101
 332:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         param = 0xFFFFFFFFU;
ARM GAS  /tmp/ccET3dN6.s 			page 37


 357              		.loc 1 332 33 is_stmt 0 view .LVU102
 358 00a4 064B     		ldr	r3, .L25
 359 00a6 0022     		movs	r2, #0
 360 00a8 9A60     		str	r2, [r3, #8]
 333:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 361              		.loc 1 333 9 is_stmt 1 view .LVU103
 362              	.LVL20:
 333:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 363              		.loc 1 333 15 is_stmt 0 view .LVU104
 364 00aa 4FF0FF35 		mov	r5, #-1
 365 00ae D3E7     		b	.L15
 366              	.LVL21:
 367              	.L24:
 326:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 368              		.loc 1 326 9 is_stmt 1 view .LVU105
 326:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 369              		.loc 1 326 15 is_stmt 0 view .LVU106
 370 00b0 5069     		ldr	r0, [r2, #20]
 326:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 371              		.loc 1 326 20 view .LVU107
 372 00b2 0130     		adds	r0, r0, #1
 373 00b4 5061     		str	r0, [r2, #20]
 327:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 374              		.loc 1 327 9 is_stmt 1 view .LVU108
 375 00b6 1169     		ldr	r1, [r2, #16]
 376 00b8 FFF7FEFF 		bl	FLASH_PageErase
 377              	.LVL22:
 378 00bc CCE7     		b	.L15
 379              	.L26:
 380 00be 00BF     		.align	2
 381              	.L25:
 382 00c0 00000000 		.word	pFlash
 383 00c4 00200240 		.word	1073881088
 384              		.cfi_endproc
 385              	.LFE154:
 387              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 388              		.align	1
 389              		.global	HAL_FLASH_Unlock
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	HAL_FLASH_Unlock:
 395              	.LFB157:
 417:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 396              		.loc 1 417 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 418:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 401              		.loc 1 418 3 view .LVU110
 402              	.LVL23:
 420:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 403              		.loc 1 420 3 view .LVU111
 420:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 404              		.loc 1 420 6 is_stmt 0 view .LVU112
 405 0000 094B     		ldr	r3, .L32
ARM GAS  /tmp/ccET3dN6.s 			page 38


 406 0002 9B6A     		ldr	r3, [r3, #40]
 420:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 407              		.loc 1 420 5 view .LVU113
 408 0004 002B     		cmp	r3, #0
 409 0006 01DB     		blt	.L31
 418:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 410              		.loc 1 418 21 view .LVU114
 411 0008 0020     		movs	r0, #0
 412 000a 7047     		bx	lr
 413              	.L31:
 423:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     WRITE_REG(FLASH->NSKEYR, FLASH_KEY2);
 414              		.loc 1 423 5 is_stmt 1 view .LVU115
 415 000c 064B     		ldr	r3, .L32
 416 000e 074A     		ldr	r2, .L32+4
 417 0010 9A60     		str	r2, [r3, #8]
 424:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 418              		.loc 1 424 5 view .LVU116
 419 0012 02F18832 		add	r2, r2, #-2004318072
 420 0016 9A60     		str	r2, [r3, #8]
 427:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 421              		.loc 1 427 5 view .LVU117
 427:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 422              		.loc 1 427 9 is_stmt 0 view .LVU118
 423 0018 9B6A     		ldr	r3, [r3, #40]
 427:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 424              		.loc 1 427 8 view .LVU119
 425 001a 002B     		cmp	r3, #0
 426 001c 01DB     		blt	.L30
 418:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 427              		.loc 1 418 21 view .LVU120
 428 001e 0020     		movs	r0, #0
 429 0020 7047     		bx	lr
 430              	.L30:
 429:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 431              		.loc 1 429 14 view .LVU121
 432 0022 0120     		movs	r0, #1
 433              	.LVL24:
 451:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 434              		.loc 1 451 3 is_stmt 1 view .LVU122
 452:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 435              		.loc 1 452 1 is_stmt 0 view .LVU123
 436 0024 7047     		bx	lr
 437              	.L33:
 438 0026 00BF     		.align	2
 439              	.L32:
 440 0028 00200240 		.word	1073881088
 441 002c 23016745 		.word	1164378403
 442              		.cfi_endproc
 443              	.LFE157:
 445              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 446              		.align	1
 447              		.global	HAL_FLASH_Lock
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 452              	HAL_FLASH_Lock:
 453              	.LFB158:
ARM GAS  /tmp/ccET3dN6.s 			page 39


 459:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 454              		.loc 1 459 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 460:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 459              		.loc 1 460 3 view .LVU125
 460              	.LVL25:
 463:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 461              		.loc 1 463 3 view .LVU126
 462 0000 054B     		ldr	r3, .L37
 463 0002 9A6A     		ldr	r2, [r3, #40]
 464 0004 42F00042 		orr	r2, r2, #-2147483648
 465 0008 9A62     		str	r2, [r3, #40]
 466:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 466              		.loc 1 466 3 view .LVU127
 466:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 467              		.loc 1 466 7 is_stmt 0 view .LVU128
 468 000a 9B6A     		ldr	r3, [r3, #40]
 466:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 469              		.loc 1 466 6 view .LVU129
 470 000c 002B     		cmp	r3, #0
 471 000e 01DB     		blt	.L36
 460:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 472              		.loc 1 460 21 view .LVU130
 473 0010 0120     		movs	r0, #1
 474 0012 7047     		bx	lr
 475              	.L36:
 468:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 476              		.loc 1 468 12 view .LVU131
 477 0014 0020     		movs	r0, #0
 478              	.LVL26:
 484:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 479              		.loc 1 484 3 is_stmt 1 view .LVU132
 485:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 480              		.loc 1 485 1 is_stmt 0 view .LVU133
 481 0016 7047     		bx	lr
 482              	.L38:
 483              		.align	2
 484              	.L37:
 485 0018 00200240 		.word	1073881088
 486              		.cfi_endproc
 487              	.LFE158:
 489              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 490              		.align	1
 491              		.global	HAL_FLASH_OB_Unlock
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 496              	HAL_FLASH_OB_Unlock:
 497              	.LFB159:
 492:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   if(READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0u)
 498              		.loc 1 492 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccET3dN6.s 			page 40


 502              		@ link register save eliminated.
 493:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 503              		.loc 1 493 3 view .LVU135
 493:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 504              		.loc 1 493 6 is_stmt 0 view .LVU136
 505 0000 0A4B     		ldr	r3, .L43
 506 0002 9B6A     		ldr	r3, [r3, #40]
 493:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 507              		.loc 1 493 5 view .LVU137
 508 0004 13F0804F 		tst	r3, #1073741824
 509 0008 0BD0     		beq	.L41
 496:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 510              		.loc 1 496 5 is_stmt 1 view .LVU138
 511 000a 084B     		ldr	r3, .L43
 512 000c 084A     		ldr	r2, .L43+4
 513 000e 1A61     		str	r2, [r3, #16]
 497:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 514              		.loc 1 497 5 view .LVU139
 515 0010 02F14432 		add	r2, r2, #1145324612
 516 0014 1A61     		str	r2, [r3, #16]
 500:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 517              		.loc 1 500 5 view .LVU140
 500:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 518              		.loc 1 500 9 is_stmt 0 view .LVU141
 519 0016 9B6A     		ldr	r3, [r3, #40]
 500:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 520              		.loc 1 500 8 view .LVU142
 521 0018 13F0804F 		tst	r3, #1073741824
 522 001c 03D1     		bne	.L42
 506:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 523              		.loc 1 506 10 view .LVU143
 524 001e 0020     		movs	r0, #0
 525 0020 7047     		bx	lr
 526              	.L41:
 527 0022 0020     		movs	r0, #0
 528 0024 7047     		bx	lr
 529              	.L42:
 502:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     }
 530              		.loc 1 502 14 view .LVU144
 531 0026 0120     		movs	r0, #1
 507:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 532              		.loc 1 507 1 view .LVU145
 533 0028 7047     		bx	lr
 534              	.L44:
 535 002a 00BF     		.align	2
 536              	.L43:
 537 002c 00200240 		.word	1073881088
 538 0030 3B2A1908 		.word	135866939
 539              		.cfi_endproc
 540              	.LFE159:
 542              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 543              		.align	1
 544              		.global	HAL_FLASH_OB_Lock
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 549              	HAL_FLASH_OB_Lock:
ARM GAS  /tmp/ccET3dN6.s 			page 41


 550              	.LFB160:
 514:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 551              		.loc 1 514 1 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 516:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 556              		.loc 1 516 3 view .LVU147
 557 0000 064B     		ldr	r3, .L48
 558 0002 9A6A     		ldr	r2, [r3, #40]
 559 0004 42F08042 		orr	r2, r2, #1073741824
 560 0008 9A62     		str	r2, [r3, #40]
 519:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 561              		.loc 1 519 3 view .LVU148
 519:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 562              		.loc 1 519 7 is_stmt 0 view .LVU149
 563 000a 9B6A     		ldr	r3, [r3, #40]
 519:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 564              		.loc 1 519 6 view .LVU150
 565 000c 13F0804F 		tst	r3, #1073741824
 566 0010 01D1     		bne	.L47
 524:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 567              		.loc 1 524 10 view .LVU151
 568 0012 0120     		movs	r0, #1
 569 0014 7047     		bx	lr
 570              	.L47:
 521:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 571              		.loc 1 521 12 view .LVU152
 572 0016 0020     		movs	r0, #0
 525:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 573              		.loc 1 525 1 view .LVU153
 574 0018 7047     		bx	lr
 575              	.L49:
 576 001a 00BF     		.align	2
 577              	.L48:
 578 001c 00200240 		.word	1073881088
 579              		.cfi_endproc
 580              	.LFE160:
 582              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 583              		.align	1
 584              		.global	HAL_FLASH_OB_Launch
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 589              	HAL_FLASH_OB_Launch:
 590              	.LFB161:
 532:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 591              		.loc 1 532 1 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 534:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 596              		.loc 1 534 3 view .LVU155
 597 0000 034A     		ldr	r2, .L51
 598 0002 936A     		ldr	r3, [r2, #40]
ARM GAS  /tmp/ccET3dN6.s 			page 42


 599 0004 43F00063 		orr	r3, r3, #134217728
 600 0008 9362     		str	r3, [r2, #40]
 538:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 601              		.loc 1 538 3 view .LVU156
 539:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 602              		.loc 1 539 1 is_stmt 0 view .LVU157
 603 000a 0120     		movs	r0, #1
 604 000c 7047     		bx	lr
 605              	.L52:
 606 000e 00BF     		.align	2
 607              	.L51:
 608 0010 00200240 		.word	1073881088
 609              		.cfi_endproc
 610              	.LFE161:
 612              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 613              		.align	1
 614              		.global	HAL_FLASH_GetError
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 619              	HAL_FLASH_GetError:
 620              	.LFB162:
 572:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****    return pFlash.ErrorCode;
 621              		.loc 1 572 1 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 573:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 626              		.loc 1 573 4 view .LVU159
 574:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 627              		.loc 1 574 1 is_stmt 0 view .LVU160
 628 0000 014B     		ldr	r3, .L54
 629 0002 5868     		ldr	r0, [r3, #4]
 630 0004 7047     		bx	lr
 631              	.L55:
 632 0006 00BF     		.align	2
 633              	.L54:
 634 0008 00000000 		.word	pFlash
 635              		.cfi_endproc
 636              	.LFE162:
 638              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 639              		.align	1
 640              		.global	FLASH_WaitForLastOperation
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	FLASH_WaitForLastOperation:
 646              	.LVL27:
 647              	.LFB163:
 596:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 648              		.loc 1 596 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 596:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 652              		.loc 1 596 1 is_stmt 0 view .LVU162
ARM GAS  /tmp/ccET3dN6.s 			page 43


 653 0000 38B5     		push	{r3, r4, r5, lr}
 654              	.LCFI3:
 655              		.cfi_def_cfa_offset 16
 656              		.cfi_offset 3, -16
 657              		.cfi_offset 4, -12
 658              		.cfi_offset 5, -8
 659              		.cfi_offset 14, -4
 660 0002 0446     		mov	r4, r0
 601:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t error;
 661              		.loc 1 601 3 is_stmt 1 view .LVU163
 601:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t error;
 662              		.loc 1 601 22 is_stmt 0 view .LVU164
 663 0004 FFF7FEFF 		bl	HAL_GetTick
 664              	.LVL28:
 601:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   uint32_t error;
 665              		.loc 1 601 12 view .LVU165
 666 0008 0519     		adds	r5, r0, r4
 667              	.LVL29:
 602:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 668              		.loc 1 602 3 is_stmt 1 view .LVU166
 603:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 669              		.loc 1 603 3 view .LVU167
 605:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 670              		.loc 1 605 3 view .LVU168
 671              	.L58:
 605:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 672              		.loc 1 605 9 view .LVU169
 673 000a 144B     		ldr	r3, .L67
 674 000c 1B6A     		ldr	r3, [r3, #32]
 675 000e 13F4803F 		tst	r3, #65536
 676 0012 08D0     		beq	.L65
 607:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 677              		.loc 1 607 5 view .LVU170
 607:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     {
 678              		.loc 1 607 7 is_stmt 0 view .LVU171
 679 0014 B4F1FF3F 		cmp	r4, #-1
 680 0018 F7D0     		beq	.L58
 609:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 681              		.loc 1 609 7 is_stmt 1 view .LVU172
 609:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 682              		.loc 1 609 10 is_stmt 0 view .LVU173
 683 001a FFF7FEFF 		bl	HAL_GetTick
 684              	.LVL30:
 609:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       {
 685              		.loc 1 609 9 view .LVU174
 686 001e A842     		cmp	r0, r5
 687 0020 F3D3     		bcc	.L58
 611:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****       }
 688              		.loc 1 611 16 view .LVU175
 689 0022 0320     		movs	r0, #3
 690 0024 16E0     		b	.L59
 691              	.L65:
 617:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 692              		.loc 1 617 3 is_stmt 1 view .LVU176
 693              	.LVL31:
 620:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 694              		.loc 1 620 3 view .LVU177
ARM GAS  /tmp/ccET3dN6.s 			page 44


 620:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 695              		.loc 1 620 13 is_stmt 0 view .LVU178
 696 0026 0D4B     		ldr	r3, .L67
 697 0028 1B6A     		ldr	r3, [r3, #32]
 620:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 698              		.loc 1 620 9 view .LVU179
 699 002a 42F2FA02 		movw	r2, #8442
 700              	.LVL32:
 625:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 701              		.loc 1 625 3 is_stmt 1 view .LVU180
 625:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 702              		.loc 1 625 5 is_stmt 0 view .LVU181
 703 002e 1340     		ands	r3, r3, r2
 704              	.LVL33:
 625:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 705              		.loc 1 625 5 view .LVU182
 706 0030 09D1     		bne	.L66
 643:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 707              		.loc 1 643 3 is_stmt 1 view .LVU183
 643:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 708              		.loc 1 643 9 is_stmt 0 view .LVU184
 709 0032 0A4B     		ldr	r3, .L67
 710              	.LVL34:
 643:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 711              		.loc 1 643 9 view .LVU185
 712 0034 1B6A     		ldr	r3, [r3, #32]
 643:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 713              		.loc 1 643 6 view .LVU186
 714 0036 13F0010F 		tst	r3, #1
 715 003a 0CD0     		beq	.L63
 646:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 716              		.loc 1 646 5 is_stmt 1 view .LVU187
 646:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 717              		.loc 1 646 15 is_stmt 0 view .LVU188
 718 003c 074B     		ldr	r3, .L67
 719 003e 0122     		movs	r2, #1
 720 0040 1A62     		str	r2, [r3, #32]
 650:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 721              		.loc 1 650 10 view .LVU189
 722 0042 0020     		movs	r0, #0
 723 0044 06E0     		b	.L59
 724              	.LVL35:
 725              	.L66:
 628:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 726              		.loc 1 628 5 is_stmt 1 view .LVU190
 628:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 727              		.loc 1 628 11 is_stmt 0 view .LVU191
 728 0046 0649     		ldr	r1, .L67+4
 729 0048 4A68     		ldr	r2, [r1, #4]
 628:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 730              		.loc 1 628 22 view .LVU192
 731 004a 1A43     		orrs	r2, r2, r3
 732 004c 4A60     		str	r2, [r1, #4]
 631:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 733              		.loc 1 631 5 is_stmt 1 view .LVU193
 631:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 734              		.loc 1 631 15 is_stmt 0 view .LVU194
ARM GAS  /tmp/ccET3dN6.s 			page 45


 735 004e 034A     		ldr	r2, .L67
 736 0050 1362     		str	r3, [r2, #32]
 639:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 737              		.loc 1 639 5 is_stmt 1 view .LVU195
 639:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 738              		.loc 1 639 12 is_stmt 0 view .LVU196
 739 0052 0120     		movs	r0, #1
 740              	.LVL36:
 741              	.L59:
 651:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 742              		.loc 1 651 1 view .LVU197
 743 0054 38BD     		pop	{r3, r4, r5, pc}
 744              	.LVL37:
 745              	.L63:
 650:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 746              		.loc 1 650 10 view .LVU198
 747 0056 0020     		movs	r0, #0
 748 0058 FCE7     		b	.L59
 749              	.L68:
 750 005a 00BF     		.align	2
 751              	.L67:
 752 005c 00200240 		.word	1073881088
 753 0060 00000000 		.word	pFlash
 754              		.cfi_endproc
 755              	.LFE163:
 757              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 758              		.align	1
 759              		.global	HAL_FLASH_Program
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 764              	HAL_FLASH_Program:
 765              	.LVL38:
 766              	.LFB152:
 159:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 767              		.loc 1 159 1 is_stmt 1 view -0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 159:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 771              		.loc 1 159 1 is_stmt 0 view .LVU200
 772 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 773              	.LCFI4:
 774              		.cfi_def_cfa_offset 24
 775              		.cfi_offset 4, -24
 776              		.cfi_offset 5, -20
 777              		.cfi_offset 6, -16
 778              		.cfi_offset 7, -12
 779              		.cfi_offset 8, -8
 780              		.cfi_offset 14, -4
 781 0004 1D46     		mov	r5, r3
 160:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg;
 782              		.loc 1 160 3 is_stmt 1 view .LVU201
 161:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 783              		.loc 1 161 3 view .LVU202
 164:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 784              		.loc 1 164 3 view .LVU203
ARM GAS  /tmp/ccET3dN6.s 			page 46


 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 785              		.loc 1 167 3 view .LVU204
 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 786              		.loc 1 167 3 view .LVU205
 787 0006 174B     		ldr	r3, .L75
 788 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 789 000a 012B     		cmp	r3, #1
 790 000c 28D0     		beq	.L72
 791 000e 0746     		mov	r7, r0
 792 0010 0C46     		mov	r4, r1
 793 0012 1646     		mov	r6, r2
 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 794              		.loc 1 167 3 discriminator 2 view .LVU206
 795 0014 134B     		ldr	r3, .L75
 796 0016 0122     		movs	r2, #1
 797              	.LVL39:
 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 798              		.loc 1 167 3 is_stmt 0 discriminator 2 view .LVU207
 799 0018 1A70     		strb	r2, [r3]
 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 800              		.loc 1 167 3 is_stmt 1 discriminator 2 view .LVU208
 170:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 801              		.loc 1 170 3 discriminator 2 view .LVU209
 170:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 802              		.loc 1 170 20 is_stmt 0 discriminator 2 view .LVU210
 803 001a 0022     		movs	r2, #0
 804 001c 5A60     		str	r2, [r3, #4]
 173:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 805              		.loc 1 173 3 is_stmt 1 discriminator 2 view .LVU211
 173:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 806              		.loc 1 173 12 is_stmt 0 discriminator 2 view .LVU212
 807 001e 4FF47A70 		mov	r0, #1000
 808              	.LVL40:
 173:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 809              		.loc 1 173 12 discriminator 2 view .LVU213
 810 0022 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 811              	.LVL41:
 175:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 812              		.loc 1 175 3 is_stmt 1 discriminator 2 view .LVU214
 175:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 813              		.loc 1 175 5 is_stmt 0 discriminator 2 view .LVU215
 814 0026 20B1     		cbz	r0, .L74
 815              	.L71:
 191:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 816              		.loc 1 191 3 is_stmt 1 view .LVU216
 191:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 817              		.loc 1 191 3 view .LVU217
 818 0028 0E4B     		ldr	r3, .L75
 819 002a 0022     		movs	r2, #0
 820 002c 1A70     		strb	r2, [r3]
 191:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 821              		.loc 1 191 3 view .LVU218
 193:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** }
 822              		.loc 1 193 3 view .LVU219
 823              	.LVL42:
 824              	.L70:
 194:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
ARM GAS  /tmp/ccET3dN6.s 			page 47


 825              		.loc 1 194 1 is_stmt 0 view .LVU220
 826 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 827              	.LVL43:
 828              	.L74:
 177:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 829              		.loc 1 177 5 is_stmt 1 view .LVU221
 177:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     reg = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 830              		.loc 1 177 29 is_stmt 0 view .LVU222
 831 0032 DFF83080 		ldr	r8, .L75
 832 0036 C8F80870 		str	r7, [r8, #8]
 178:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 833              		.loc 1 178 5 is_stmt 1 view .LVU223
 834              	.LVL44:
 181:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 835              		.loc 1 181 5 view .LVU224
 836 003a 3246     		mov	r2, r6
 837 003c 2B46     		mov	r3, r5
 838 003e 2046     		mov	r0, r4
 839              	.LVL45:
 181:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 840              		.loc 1 181 5 is_stmt 0 view .LVU225
 841 0040 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 842              	.LVL46:
 184:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 843              		.loc 1 184 5 is_stmt 1 view .LVU226
 184:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 844              		.loc 1 184 14 is_stmt 0 view .LVU227
 845 0044 4FF47A70 		mov	r0, #1000
 846 0048 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 847              	.LVL47:
 187:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 848              		.loc 1 187 5 is_stmt 1 view .LVU228
 849 004c 0649     		ldr	r1, .L75+4
 850 004e 8B6A     		ldr	r3, [r1, #40]
 851 0050 D8F80820 		ldr	r2, [r8, #8]
 852 0054 22F00042 		bic	r2, r2, #-2147483648
 853 0058 23EA0203 		bic	r3, r3, r2
 854 005c 8B62     		str	r3, [r1, #40]
 855 005e E3E7     		b	.L71
 856              	.LVL48:
 857              	.L72:
 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 858              		.loc 1 167 3 is_stmt 0 view .LVU229
 859 0060 0220     		movs	r0, #2
 860              	.LVL49:
 167:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 861              		.loc 1 167 3 view .LVU230
 862 0062 E4E7     		b	.L70
 863              	.L76:
 864              		.align	2
 865              	.L75:
 866 0064 00000000 		.word	pFlash
 867 0068 00200240 		.word	1073881088
 868              		.cfi_endproc
 869              	.LFE152:
 871              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 872              		.align	1
ARM GAS  /tmp/ccET3dN6.s 			page 48


 873              		.global	HAL_FLASH_Program_IT
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 878              	HAL_FLASH_Program_IT:
 879              	.LVL50:
 880              	.LFB153:
 207:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 881              		.loc 1 207 1 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 207:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 885              		.loc 1 207 1 is_stmt 0 view .LVU232
 886 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 887              	.LCFI5:
 888              		.cfi_def_cfa_offset 24
 889              		.cfi_offset 4, -24
 890              		.cfi_offset 5, -20
 891              		.cfi_offset 6, -16
 892              		.cfi_offset 7, -12
 893              		.cfi_offset 8, -8
 894              		.cfi_offset 14, -4
 895 0004 0C46     		mov	r4, r1
 208:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 896              		.loc 1 208 3 is_stmt 1 view .LVU233
 209:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 897              		.loc 1 209 3 view .LVU234
 212:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 898              		.loc 1 212 3 view .LVU235
 215:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 899              		.loc 1 215 3 view .LVU236
 215:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 900              		.loc 1 215 3 view .LVU237
 901 0006 1449     		ldr	r1, .L82
 902              	.LVL51:
 215:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 903              		.loc 1 215 3 is_stmt 0 view .LVU238
 904 0008 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 905 000a 0129     		cmp	r1, #1
 906 000c 21D0     		beq	.L80
 907 000e 0646     		mov	r6, r0
 908 0010 1546     		mov	r5, r2
 909 0012 1F46     		mov	r7, r3
 215:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 910              		.loc 1 215 3 is_stmt 1 discriminator 2 view .LVU239
 911 0014 1049     		ldr	r1, .L82
 912 0016 0123     		movs	r3, #1
 913 0018 0B70     		strb	r3, [r1]
 215:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 914              		.loc 1 215 3 discriminator 2 view .LVU240
 218:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 915              		.loc 1 218 3 discriminator 2 view .LVU241
 218:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 916              		.loc 1 218 20 is_stmt 0 discriminator 2 view .LVU242
 917 001a 0023     		movs	r3, #0
 918 001c 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccET3dN6.s 			page 49


 221:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 919              		.loc 1 221 3 is_stmt 1 discriminator 2 view .LVU243
 221:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 920              		.loc 1 221 12 is_stmt 0 discriminator 2 view .LVU244
 921 001e 4FF47A70 		mov	r0, #1000
 922              	.LVL52:
 221:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 923              		.loc 1 221 12 discriminator 2 view .LVU245
 924 0022 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 925              	.LVL53:
 223:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 926              		.loc 1 223 3 is_stmt 1 discriminator 2 view .LVU246
 223:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   {
 927              		.loc 1 223 6 is_stmt 0 discriminator 2 view .LVU247
 928 0026 8046     		mov	r8, r0
 929 0028 28B1     		cbz	r0, .L79
 226:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 930              		.loc 1 226 5 is_stmt 1 view .LVU248
 226:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 931              		.loc 1 226 5 view .LVU249
 932 002a 0B4B     		ldr	r3, .L82
 933 002c 0022     		movs	r2, #0
 934 002e 1A70     		strb	r2, [r3]
 226:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 935              		.loc 1 226 5 view .LVU250
 936              	.LVL54:
 937              	.L78:
 245:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 938              		.loc 1 245 1 is_stmt 0 view .LVU251
 939 0030 4046     		mov	r0, r8
 940 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 941              	.LVL55:
 942              	.L79:
 231:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.Address = Address;
 943              		.loc 1 231 5 is_stmt 1 view .LVU252
 231:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     pFlash.Address = Address;
 944              		.loc 1 231 29 is_stmt 0 view .LVU253
 945 0036 084B     		ldr	r3, .L82
 946 0038 9E60     		str	r6, [r3, #8]
 232:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     
 947              		.loc 1 232 5 is_stmt 1 view .LVU254
 232:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****     
 948              		.loc 1 232 20 is_stmt 0 view .LVU255
 949 003a DC60     		str	r4, [r3, #12]
 235:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 950              		.loc 1 235 5 is_stmt 1 view .LVU256
 951              	.LVL56:
 238:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 952              		.loc 1 238 5 view .LVU257
 238:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 953              		.loc 1 238 6 is_stmt 0 view .LVU258
 954 003c 074A     		ldr	r2, .L82+4
 955 003e 936A     		ldr	r3, [r2, #40]
 238:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 956              		.loc 1 238 15 view .LVU259
 957 0040 43F04073 		orr	r3, r3, #50331648
 958 0044 9362     		str	r3, [r2, #40]
ARM GAS  /tmp/ccET3dN6.s 			page 50


 241:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 959              		.loc 1 241 5 is_stmt 1 view .LVU260
 960 0046 2A46     		mov	r2, r5
 961 0048 3B46     		mov	r3, r7
 962 004a 2046     		mov	r0, r4
 963              	.LVL57:
 241:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c ****   }
 964              		.loc 1 241 5 is_stmt 0 view .LVU261
 965 004c FFF7FEFF 		bl	FLASH_Program_DoubleWord
 966              	.LVL58:
 967 0050 EEE7     		b	.L78
 968              	.LVL59:
 969              	.L80:
 215:../../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c **** 
 970              		.loc 1 215 3 view .LVU262
 971 0052 4FF00208 		mov	r8, #2
 972 0056 EBE7     		b	.L78
 973              	.L83:
 974              		.align	2
 975              	.L82:
 976 0058 00000000 		.word	pFlash
 977 005c 00200240 		.word	1073881088
 978              		.cfi_endproc
 979              	.LFE153:
 981              		.global	pFlash
 982              		.section	.data.pFlash,"aw"
 983              		.align	2
 986              	pFlash:
 987 0000 00       		.byte	0
 988 0001 000000   		.space	3
 989 0004 00000000 		.word	0
 990 0008 00000000 		.word	0
 991 000c 00000000 		.word	0
 992 0010 01000000 		.word	1
 993 0014 00000000 		.word	0
 994 0018 00000000 		.word	0
 995              		.text
 996              	.Letext0:
 997              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 998              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l562xx.h"
 999              		.file 5 "../../Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_def.h"
 1000              		.file 6 "../../Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_flash.h"
 1001              		.file 7 "../../Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal.h"
 1002              		.file 8 "../../Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_flash_ex.h"
ARM GAS  /tmp/ccET3dN6.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l5xx_hal_flash.c
     /tmp/ccET3dN6.s:22     .text.FLASH_Program_DoubleWord:00000000 $t
     /tmp/ccET3dN6.s:27     .text.FLASH_Program_DoubleWord:00000000 FLASH_Program_DoubleWord
     /tmp/ccET3dN6.s:129    .text.FLASH_Program_DoubleWord:00000024 $d
     /tmp/ccET3dN6.s:134    .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
     /tmp/ccET3dN6.s:140    .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
     /tmp/ccET3dN6.s:155    .text.HAL_FLASH_OperationErrorCallback:00000000 $t
     /tmp/ccET3dN6.s:161    .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
     /tmp/ccET3dN6.s:176    .text.HAL_FLASH_IRQHandler:00000000 $t
     /tmp/ccET3dN6.s:182    .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
     /tmp/ccET3dN6.s:382    .text.HAL_FLASH_IRQHandler:000000c0 $d
     /tmp/ccET3dN6.s:986    .data.pFlash:00000000 pFlash
     /tmp/ccET3dN6.s:388    .text.HAL_FLASH_Unlock:00000000 $t
     /tmp/ccET3dN6.s:394    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
     /tmp/ccET3dN6.s:440    .text.HAL_FLASH_Unlock:00000028 $d
     /tmp/ccET3dN6.s:446    .text.HAL_FLASH_Lock:00000000 $t
     /tmp/ccET3dN6.s:452    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
     /tmp/ccET3dN6.s:485    .text.HAL_FLASH_Lock:00000018 $d
     /tmp/ccET3dN6.s:490    .text.HAL_FLASH_OB_Unlock:00000000 $t
     /tmp/ccET3dN6.s:496    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
     /tmp/ccET3dN6.s:537    .text.HAL_FLASH_OB_Unlock:0000002c $d
     /tmp/ccET3dN6.s:543    .text.HAL_FLASH_OB_Lock:00000000 $t
     /tmp/ccET3dN6.s:549    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
     /tmp/ccET3dN6.s:578    .text.HAL_FLASH_OB_Lock:0000001c $d
     /tmp/ccET3dN6.s:583    .text.HAL_FLASH_OB_Launch:00000000 $t
     /tmp/ccET3dN6.s:589    .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
     /tmp/ccET3dN6.s:608    .text.HAL_FLASH_OB_Launch:00000010 $d
     /tmp/ccET3dN6.s:613    .text.HAL_FLASH_GetError:00000000 $t
     /tmp/ccET3dN6.s:619    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
     /tmp/ccET3dN6.s:634    .text.HAL_FLASH_GetError:00000008 $d
     /tmp/ccET3dN6.s:639    .text.FLASH_WaitForLastOperation:00000000 $t
     /tmp/ccET3dN6.s:645    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
     /tmp/ccET3dN6.s:752    .text.FLASH_WaitForLastOperation:0000005c $d
     /tmp/ccET3dN6.s:758    .text.HAL_FLASH_Program:00000000 $t
     /tmp/ccET3dN6.s:764    .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
     /tmp/ccET3dN6.s:866    .text.HAL_FLASH_Program:00000064 $d
     /tmp/ccET3dN6.s:872    .text.HAL_FLASH_Program_IT:00000000 $t
     /tmp/ccET3dN6.s:878    .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
     /tmp/ccET3dN6.s:976    .text.HAL_FLASH_Program_IT:00000058 $d
     /tmp/ccET3dN6.s:983    .data.pFlash:00000000 $d

UNDEFINED SYMBOLS
FLASH_PageErase
HAL_GetTick
